字符串打格式化表达式
　作用：
　　生成一定格式打字符串
　运算符％
　语法格式：
　　格式化字符串％参数值
　　格式化字符串％（参数值１，参数值２，....）
　示例：
　　fmt = "name: %s, age:%d"
   n = 'tarena'
   a = 15
   fmt = "name :%s, age: %d" {fmt %('andi',15)}
   如果是一个参数不需要（）括号
   s2 =  '%d' % 100
  格式化字符串中打占位符和类型码
  　　占位符和类型码　　意义
  　　　％s　　　　　　字符串,使用str(x)函数转换
  　　　％r　　　　　　字符串,使用repr(x)函数转换
  　　　％c　　　　　　整数转为单个字符
  　　　％d　　　　　　十进制整数
     　％o　　　　　　八进制整数
     　％x　　　　　　十六进制整数（字符a-f小写）
     　％X　　　　　　十六进制整数（字符Ａ－Ｆ大写）
     　％e　　　　　　指数型浮点数（e小写）
     　％Ｅ　　　　　　指数型浮点数（Ｅ大写）
     　％f,%F       浮点十进制形式
     　%g,%G        十进制形式浮点或指数浮点自动转换
     　%%　　　　　　　等同于一个%字符（因为％为占位符，所以必须使用两次）
     占位符和类型码之间打格式化语法：
     　％［- + 0 宽度.精度］类型码
    　说明：
    　　-左对齐（默认为右对齐）
    　　+　显示正号
    　　０　左侧空白位置补零
    　宽度　整数，整个数据输出打宽度（占用打字符数）
    　精度　整数，保留小鼠占后多少为（默认为６位）
    示例
    　＂％d＂ % 123    #'123'
      "%10d" %123  #'       123'左侧空白处补７位空格
      ＂％－１０d＂％　１２３　＃'123       '　右侧空白补７位空格
      ＂％１０s＂　　％　＇abc＇ #'       abc'
      "%010d" %'123' # '0000000123' 前面用０补位，数量１０位
      ％．１０f% 3.1415926535897 #'3.141592665' 小数点后面保留１０位精度


循环语句
　循环语句
　　while　语句
　　作用：
　　　根据一定条件，重复的执行一条语句或多条语句
　　语法：
     while 真值表达式:
        语句块１（此部分的语句可能会重复执行）
     else:
        语句块２
    说明：
    　1:先执行真值表达式,测试不二值为true或Ｆalse
      2：如果真挚表达式测试值为True，则执行语句块１,然后再返回
      　　到第一步,重复进行测试
      ３：如果真值表达式测试值为Ｆalse，则执行语句块２,然后结果此
         while语句的执行，如果没有else子句,则直接结束此while语句的
         执行
    　注：else子句部分可以省略（同if语句类似）

while 语句注意事项：
　1.要控制循环打真值表达式来防止死循环
　2.通常要真值表达式内的循环变量来控制循环条件
　3.通常在循环语句块内要改变循环变量来控制循环条件和变量打走向    
while语句嵌套
　while 语句本身是语句,和其他语句一样,可以嵌入到任何打复合语句中
break 语句
　问题：
    如果在循环过程中，不想再集采执行此循环两，怎么办？
  作用：
  　用于循环语句(while或for语句)，用来终止当前循环语句的执行
  语法：
  　break
  说明：
  　当break语句执行后,此循环语break之后的语句将不再执行
  　break语句通常和if语句组合使用
  　break语句执行终止当前循环语句的执行,如果有循环嵌套时,不会跳出嵌套的外重循环
  　break语句只能在循环语句(while或for语句)内部使用