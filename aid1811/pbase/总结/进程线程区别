共同点:
1.充分利用计算机资源提高运行效率
2.都消耗计算机一定的资源
3.都可以同时执行多个任务
4.相互之间执行都互不影响
5.都可以利用计算机多核资源
6.都有属于自己的特征
7.都有一定的生命周期

不同点:
1.一个进程里面可以包含多个进程
2.进程是计算机分配资源的最小单元,线程是系统分配内核的最小工作单元
3.线程的资源消耗比进程小
4.进程是轻量级的进程
5.线程是以并行方式执行:同时处理多个任务,内核在任务间不断切换
  进程是以并发形式执行:多个任务利用计算机多核资源在同时执行

进程优点:
1.子进程拥有父进程的全部代码段
2.进程拥有进程池,可以提高运行效率
进程缺点:
1.占用资源较大
2.使用并发关系
3.父子进程之间会抢占时间片
线程优点:
1.占用系统资源较小
2.线程是轻量级的进程
线程缺点:
1.GIL问题
2.同步互斥

///////////////////////////////////////////////////////////

***********************************************************
进程的优缺点:
   优点:1. 可以利用计算机多核资源进行并发处理
       2.  空间独立,数据安全性好
       3. 有专门的进程间通信方法,通信方便
   缺点:1. 创建删除过程消耗资源较多
       2. 大量的进程需要的计算机资源也比较多
线程的优缺点
   优点:1. 创建简单创建删除过程消耗资源少
       2. 使用全局变量通信方便
       3. 也能计算机多核进行并发操作
   缺点:1. 通信过程中往往需要同步互斥机制逻辑复杂 
       2. 空间不独立,数据容易被修改
       3. python线程有GIL问题

进程线程的联系
  1. 两者都是多任务编程方式,都能够使用计算机多核
  2. 一个进程可以包含多个线程分支
  3. 多个线程共享进程资源
  4. 进程线程在系统中都有自己的特有属性,如ID等

使用场景
  * 某个任务并发比较多,此时多线程消耗资源较少
  * 不同的独立的任务模块,使用多进程比较好管理
  * 在通信和数据处理上考虑可行性,如果同步互斥操作比较复杂
    ,此时多线程可能容易出错

要求: 1. 进程线程的区别联系
     2. 进程间通信都知道哪些,有什么特点
     3. 什么是同步互斥,你在什么情况下使用
     4. 给一个情形,分析使用进程还是线程,为什么?
     5. 问一些概念,僵尸进程处理,进程状态转换,python线程
        效率                 