主要内容:
  MySQL关系型数据库
  1.概述
  2.MySQL安装和配置
  3.库,表操作
  4.结构化查询语言(SQL)
  5.数据约束(数据应该遵循的规则)
  6.数据导入,导出
  7.权限管理
  8.数据库事务
  9.存储引擎
  10.性能调优
  11.E-R关系图(图形化方式描述数据关系)
  12.Python访问MySQL
--------------------------------------------------------------
day01笔记:
1.概述
  1)什么是数据库
    a)数据库:根据某种数据模型,对属性进行科学,高效存放,读取管理的仓库
    b)数据库管理系统(DataBase Management System)简写DBMS,位于操作系统和应用程序
      之间的一套软件系统,专门用于数据管理
    c)数据库系统:一般性统称,包括DBMS硬软件系统,还包括应用程序,人员角色(用户,DBA)
    d)应用场合
      -几乎所有软件系统
      -一种重要的基础软件
    e)主流DBMS系统
      Oracle             Oracle,MySQL
      微软                SQL server
      IBM                DB2
      Sybase             Sybase
      加州大学伯克利分校    PostgreSQL
  2)数据管理的三个阶段
    a)人工管理
      -数据,程序绑定在一起
      -管理简单
      -缺点:数据不能实现共享,不能单独保存
    b)文件系统管理
      -数据保存在文件中,单独存放到外部存储设备
      -优点:能够实现数据共享
            数据和程序分离
      -缺点:数据联系较弱,数据冗余,一致性差
    c)数据库管理阶段
      -单独用一套软件,专门进行数据管理
      -优点: 数据独立共享,低冗余
            提供了方便,友好的接口
            更强的安全性,可靠性
            丰富工具(性能优化,备份恢复,查询,权限)
      -缺点:付出额外的软硬件成本,人力成本
  3)数据库概念模型
    a)层次模型
    b)网状模型
    c)关系模型
      -当前主流模型
      -使用二维表(关系)表示数据,数据之间的联系

    d)非关系模型
  4)关系术语(重点)
    -实体:现实中可以区分的事物
    -关系:规范的二维表,每一列都不可再分
    -元组:表中一行叫一个元组,表示一个实体信息
    -属性:表中一列,描述一个实体的某个数据值,也称为"字典"
    -键(key):可以唯一区分实体的属性,称为键
    -主键(Primary Key):多个键中选取一个作为主键,从逻辑上唯一区分一个实体
                      非空,不重复
  5)关系模型的优点
    -建立在严格的数学理论之上
    -概念简单,单一,结构清晰,能够用简单的模型表达出复杂的数据关系

2.MySQL简介
  1)开源的,使用广泛的关系型数据库
    瑞典MySQL AB公司开发,后被sun公司收购,sun公司被Oracle收购
    原作者开发MariaDB,与MySQL兼容性
  2)特点
    -开源,成本低
    -体积小,速度快
    -支持Unix/Linux,Windows等主流操作系统
    -使用C/C++编写,可移植强
    -支持丰富的编程语言接口,c,c++,java,Python,Java ,PhP
  3)主要版本
    -社区版:开源免费,不提供官方支持
    -企业版:付费版
    -集群版:开源免费,可以将多台服务器封装成一个逻辑上的服务器
    -高级集群版:付费版
  4)安装配置
    -windows
    -ubuntu
       第一步:
         sudo apt-get install mysql-server
         sudo apt-get install mysql-client
         sudo apt-get install libmysqlclient-dev
       第二步:查看是否安装成功
         查看端口:netstat -an | grep 3306
                如果3306是Listen状态,则成功
         管理脚本:sudo /etc/init.d/mysql status
                 如果看到是Running状态,则成功 
  5)MySQL服务启动,停止
    -启动:sudo /etc/init.d/mysql start
    -停止:sudo /etc/init.d/mysql stop
    -重启:sudo /etc/init.d/mysql restart
    -查看状态:sudo /etc/init.d/mysql status
  6)客户端与服务器
    -服务器:MySQL(d表示Daemon简写)
    -客户端:MySQL

    使用客户端连接服务器:
      命令:mysql -h服务器地址 -u用户名 -p用户密码
      示例:mysql -hlocalhost -uroot -p123456
      说明:mysql         运行mysql客户端程序
          -hlocalhost   连接本地(如果是其他可以输入ip地址)
          -uroot        表示使用root用户登录连接
          -p123456      表示root用户的密码是123456

          备注:如果连接本地, -hlocalhost可以省略
  3.MySQL操作
    1)SQL语言:结构化查询语言(Structured Query Language)
    2)功能:用来对DBMS系统进行操作
          库,表管理
          数据增,删,改,查(CRUD)
    3)SQL语言是不区分大小写的,大小写不敏感
      不支持TAB自动补齐
      以分号结束
      使用\c可以废弃写错了的语句
    4)库操作
      -show databases;列出当前服务器所存在的库
      -创建库:create database 库名称 default charset=字符集
        示例 : e.g. 创建名称为bank的库,使用utf8字符集
        create database bank default charset=utf8
      -进入/切换库:
        use 库名称;
      -查看当前所在库:
        select database();
      -查看库中有哪些表: 
        show tables;
      -删除库bank
        drop database bank;
    5)数据库构成
      -库中包含表,视图(View),索引(Index),触发器(Trigger),存储过程(SP),用户
      -命名规范:
         由字符,数字,下划线构成,不能全是数字,不能全是数字
         库名称区分大小写
         避开MySQL的关键字
    6)表操作(重点)
      a)创建表
        create table 表名称(
          字段1    类型(长度)   约束,
          字段2    类型(长度)   约束,
          ...
        ) default charset=字符集;

        创建acct(账户)表:
        第一步:如果没有bank库,先创建库
        第二步:使用use命令,进入bank库
        第三步:执行建表SQL语句:
         create table acct (
              acct_num varchar(32),
              acct_name varchar(128)
          ) default charset=utf8;
        第四步:使用show tables命令查看是否成功
      b)查看表结构:desc  表名称
        e.g.   查看acct表结构
      c)查看创建表的SQL语句:show create table表名称
        e.g.   查看acct建表SQL语句
        show create table acct;
      d)删除表:drop table 表名
    7)数据操作(重点):
      e.g.
        create table acct(
        acct_num varchar(32),-- 账号,字符串,32字节
        acct_name varchar(128), -- 户名,字符串,128字节
        cust_num varchar(32), -- 账号编号,字符串,32字节
        acct_type int,  -- 账户类型,整数型
        reg_date date, -- 开户日期,日期类型
        status int, -- 账户状态,整数型
        balance decimal(16,2) -- 数字类型,最长16位,小数点后2位
        ) default charset=utf8;
      *需要注意地方:
      语句中,除了注释部分以外,不能出现中文字符
      括号必须成对匹配,并且嵌套正确,最好成对书写
      date 日期类型,容易写成data
      注意其他的拼写错误
      最后的分号不要忘记写
      注释两减号后面必须加空格

    a)插入数据:insert into
      示例1 向acct表插入一笔数据:
      insert into acct values('622345000001', 'Jerry', 'C0001', 1, now(), 1, 1000.00);
       
      *需要注意的地方
        除字符串内容以外,不能有中文符号
        字段的个数,类型,顺序必须和表结构一致
        字符串类型的数据使用单引号引起来
        now()是一个系统函数,取数据库系统当前日期
        每个值之间使用英文逗号分隔

      示例2:使用一个SQL语句插入多条
      insert into acct
      values('622345000002', 'Tom', 'C0002', 1, now(), 1, 2000.00),
      ('622345000003', 'tim', 'C0003', 1, now(), 1, 30000.00),
      ('622345000004', '周大哥', 'C0004', 1, now(), 1, 888888888.00);
        
      示例3:指定字段插入
      insert into acct(acct_num,acct_name)
      values('622345000005','Emma');
    b)查询数据
      - 格式:
        select * from 表名 [where 条件]]
        select 字段列表 from 表名称 [where 条件]
      - 示例1:查询所有数据
        select * from 表名
      - 示例2:指定查询部分字段
        select acct_num,balance from acct;
      - 示例3：查询指定字段，为字段指定别名
              select acct_no "账号",-- 双引号中间为别名
              acct_name "户名", 
              balance "余额"
        from acct;

        - 示例4：查询时，使用字段的值进行计算
                    查询账号余额，以万元为单位显示
        select acct_no "账号",-- 双引号中间为别名
              acct_name "户名", 
              balance / 10000 "余额(万元)"
        from acct;

        - 示例5：带条件的查询
        -- 带两个条件的查询, 两个条件同时满足
        select * from acct
        where acct_no = '622345000001'
          and acct_name = 'Jerry';

        -- 带两个条件的查询, 两个条件满足一个
        select acct_no, acct_name, balance
        from acct 
        where acct_name = 'Jerry'
          or acct_name = 'Tom';

  4. MySQL数据类型
     1）主要数据类型
       - 数值类型：整数、浮点数
       - 字符类型
       - 日期时间
       - 枚举类型：值相对较少、范围较固定
     
     2）数值类型
       - 整数：TINYINT(1字节)，SMALLINT(2字节)
               INT(4字节)，BIGINT(8字节)
       - 浮点：Decimal 长度可变 精确数字，可指定小数位数
               Decimal(16, 2)表示最长16位，小位

     3）字符串类型
       - char：定长字符串
               最大能保存255字符
         如果长度不足，使用空格填充
         超过规定长度，则无法存入
         性能好于varchar类型
       - varchar: 可变长字符串（使用最多，首选）
               最大可存65535个字符
         按照实际大小分配存储空间
         字符超过最大长度，则无法写入
         性能低于char类型
       - text: 大文本类型，字符数量大于65535用

     4）枚举类型: enum, set
       - enum: 从给定的范围选取一个
       - set：从给定的范围选取一个或多个
       - 示例：
       create table enum_test(
       name varchar(32),
       sex enum('boy','girl'),-- 从两者选一
       course set('music', 'dance','paint')
    ;

     -- 在枚举范围内,可以插入
     insert into enum_test 
     values('Jerry', 'girl','music,dance');
     -- 在枚举范围之外,插入报错,football不在范围内
     insert into enum_test 
     values('Jerry', 'girl','music,football;
作业：
1. 复习、理解以下概念
  关系数据库、数据管理三个阶段及特点
  元组、属性、键键
2. 练习和实际操作
 1）MySQL的安装、启动、停止、登录
 2）库操作：建库、查看、进入/切换
 3）表操作：新建、查看
 4）数据操作：插入、查询
 5）理解和正确使用所讲的数据类型