python包安装工具--pip
作用: 管理python的标准第三方库中的软件包
安装: sudo apt-get install python3-pip
常用命令
  1. 安装软件 pip3 install package
  2. 查看当前python第三方软件包: pip3 list
  3. 搜索某个软件包: pip3 search [name]
  4. 查看软件包信息: pip3 show package
  5. 软件包升级: pip3 install --upgrade [package]
  6. 卸载软件包: pip3 uninstall [package]
  7. 导入软件包环境: pip3 freeze > requirements.txt
     自动安装环境内容: pip3 install -r requirements.txt

程序调试方法
  import pdb
  b bredk 设置断电
  c continue 继续执行
  n next 单步执行
  s step 单步执行,能够进入函数内部
  l list 查看代码段
  pp 查看变量
  help 帮助
  exit 退出

  进入pdb调试: pdb.set_trace()

cookie:
  1. 在程序第一行加上
    #! /usr/bin/env python3
  2. 修改程序的执行权限
    chmod 755 test.py
  3. 可以直接./test.py执行该程序

什么是项目?
  软件项目既有一定完整功能的代码
  需求分析-->概要设计-->项目规划-->详细设计-->编码测试-->项目测试-->修改完整-->提交发布--->后期维护

  需求分析: 确定用户的真实需求
    1. 确定用户真实需求和项目的基本功能
    2. 对项目进行整体评估和可行性分析
    3. 落实为需求文档,用户确认
  概要设计: 对项目进行初步分析和整体流程设计
    1. 确定项目流程,完成项目原型设计
    2. 确定基本框架和技术模型
    3. 落实为概要设计文档

  项目规划: 确定开发时间轴和流程
    1. 确定开发工作的先后顺序
    2. 确定时间节点,和重要的里程碑
    3. 人员的分工
    4. 形式甘特图,思维导图等指导开发
  
  详细设计和编码测试: 具体功能细节设计和实现
    1. 形成详细的设计文档: 思路, 逻辑流程,数据结构,功能说明,技术点说明,代码说明,约束等
    2. 根据设计写代码
    3. 代码测试
    4. 技术攻关

  项目测试: 对项目按照功能进行测试
    1. 跨平台,黑盒白盒,等等
    2. 完成测试报告

  调试修复,代码完善
    1. 根据测试进行代码完善

  项目发布:
    1. 将项目交给用户上线使用
    2. 完成项目说明文档

  后期维护
    1. 项目后期修改,升级处理
    
项目注意事项
    1. 按时完成项目工作
    2. 注意技术选择和人员冲突

项目说明文档
    常见项目文档: 需求分析文档,概要设计文档,详细设计文档,测试文档,说明文档等

项目工具推荐
    编写文档: word ppt excel markdown
    项目流程图: Mindmanager  visio xmind
    项目管理: project
    代码管理工具: git svn

